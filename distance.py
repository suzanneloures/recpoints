from geopy.distance import geodesic


def distanceBetween(p1,p2):
    return geodesic(p1,p2).meters

def inDistance(point_i, points, distance):
    return [p for p in points if distanceBetween(point_i,p) <= distance]


def byStep(coordinates, stepMeters):
    result = []
    coord = coordinates[0]
    for c in coordinates:
        if distanceBetween(coord, c) >= stepMeters:
            result.append(c)
            coord = c
        
    return result


if __name__ == '__main__':
    #print(distanceBetween((-13.011547,-38.482899),(-13.012488,-38.482180)))
    c = [(-12.91098, -38.33878), (-12.91104, -38.33871), (-12.91105, -38.33867), (-12.91104, -38.33862), (-12.911, -38.33858), (-12.91094, -38.33856), (-12.9108, -38.33861), (-12.91049, -38.33883), (-12.91037, -38.33897), (-12.90856, -38.34041), (-12.9079, -38.34089), (-12.9075, -38.34122), (-12.90693, -38.34182), (-12.90618, -38.34263), (-12.90594, -38.34299), (-12.90587, -38.34318), (-12.90582, -38.3434), (-12.90579, -38.34393), (-12.90585, -38.34442), (-12.90592, -38.3447), (-12.90602, -38.34493), (-12.90625, -38.34531), (-12.90641, -38.34551), (-12.90663, -38.34574), (-12.90695, -38.34599), (-12.90704, -38.34605), (-12.90731, -38.34619), (-12.9077, -38.34634), (-12.90872, -38.34676), (-12.90894, -38.34686), (-12.90915, -38.34701), (-12.90967, -38.34739), (-12.91001, -38.34765), (-12.91016, -38.34771), (-12.91032, -38.34774), (-12.91061, -38.34774), (-12.91139, -38.34753), (-12.91153, -38.34748), (-12.91163, -38.3474), (-12.91197, -38.3473), (-12.91486, -38.34633), (-12.91654, -38.34576), (-12.91683, -38.34566), (-12.91699, -38.34562), (-12.91729, -38.34558), (-12.91752, -38.34559), (-12.91799, -38.34563), (-12.91835, -38.34572), (-12.91863, -38.34582), (-12.91887, -38.34594), (-12.9191, -38.34608), (-12.91931, -38.34626), (-12.91951, -38.34645), (-12.9197, -38.34667), (-12.91987, -38.34691), (-12.92001, -38.34717), (-12.92017, -38.34759), (-12.92034, -38.34811), (-12.92061, -38.34905), (-12.92128, -38.35149), (-12.92133, -38.35172), (-12.92135, -38.35191), (-12.92133, -38.35224), (-12.92127, -38.35255), (-12.92095, -38.35325), (-12.92073, -38.35375), (-12.92069, -38.35384), (-12.92056, -38.35397), (-12.92042, -38.35416), (-12.92033, -38.35424), (-12.92017, -38.35427), (-12.92008, -38.35425), (-12.92001, -38.3542), (-12.9199, -38.35404), (-12.91986, -38.35392), (-12.91985, -38.35368), (-12.91988, -38.35358), (-12.91993, -38.35351), (-12.92, -38.35345), (-12.92009, -38.3534), (-12.92022, -38.35337), (-12.92034, -38.35338), (-12.92094, -38.35363), (-12.92152, -38.3539), (-12.92162, -38.35402), (-12.92168, -38.35408), (-12.92172, -38.35416), (-12.92173, -38.3543), (-12.92171, -38.35438), (-12.92166, -38.35446), (-12.92153, -38.35457), (-12.92134, -38.35467), (-12.92123, -38.3547), (-12.92112, -38.35471), (-12.92102, -38.35467), (-12.92096, -38.35463), (-12.92088, -38.3545), (-12.92086, -38.35443), (-12.92082, -38.3542), (-12.92086, -38.35406), (-12.92097, -38.35378), (-12.92113, -38.35341), (-12.92144, -38.35275), (-12.92167, -38.35233), (-12.92183, -38.35201), (-12.92197, -38.35179), (-12.92205, -38.35173), (-12.92209, -38.35168), (-12.92219, -38.35163), (-12.92231, -38.35162), (-12.92261, -38.35168), (-12.92287, -38.35171), (-12.92311, -38.35171), (-12.9235, -38.35163), (-12.92384, -38.35151), (-12.92464, -38.35112), (-12.92526, -38.35079), (-12.92555, -38.35059), (-12.92581, -38.35033), (-12.92659, -38.34953), (-12.92672, -38.34944), (-12.92683, -38.34938), (-12.92704, -38.34927), (-12.92721, -38.34922), (-12.92739, -38.34922), (-12.92745, -38.34922), (-12.9275, -38.34923), (-12.92762, -38.34924), (-12.92795, -38.34931), (-12.92813, -38.3493), (-12.92831, -38.34926), (-12.92868, -38.34909), (-12.93111, -38.34794), (-12.93182, -38.34765), (-12.93237, -38.34748), (-12.93267, -38.34743), (-12.93314, -38.34739), (-12.93334, -38.34738), (-12.93349, -38.34734), (-12.93369, -38.34723), (-12.93471, -38.34674), (-12.936, -38.34605), (-12.93776, -38.3452), (-12.93852, -38.34482), (-12.93985, -38.34416), (-12.94124, -38.34346), (-12.94266, -38.34276), (-12.94436, -38.34191), (-12.94462, -38.34184), (-12.94468, -38.34183), (-12.94485, -38.34187), (-12.94496, -38.34192), (-12.94512, -38.34201), (-12.9455, -38.34226), (-12.94726, -38.34353), (-12.94809, -38.34414), (-12.94826, -38.34434), (-12.94984, -38.34703), (-12.95046, -38.34799), (-12.95164, -38.34973), (-12.95302, -38.3516), (-12.95328, -38.35197), (-12.95337, -38.35203), (-12.95351, -38.35209), (-12.95359, -38.3521), (-12.95418, -38.35188), (-12.95443, -38.35186), (-12.95463, -38.35194), (-12.95471, -38.35199), (-12.95481, -38.35214), (-12.95485, -38.35224), (-12.95487, -38.35233), (-12.95484, -38.35296), (-12.95482, -38.35424), (-12.95479, -38.35447), (-12.95474, -38.35466), (-12.95537, -38.35434), (-12.95563, -38.35422), (-12.9557, -38.3542), (-12.95578, -38.35422), (-12.95614, -38.35448), (-12.95637, -38.35444), (-12.95665, -38.35434), (-12.95666, -38.3543)]
    #steps = byStep(c,1000)
    r = inDistance((-12.91098, -38.33878),c,1000)
    print(steps)